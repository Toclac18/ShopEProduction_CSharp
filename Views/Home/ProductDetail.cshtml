@model List<ShopEProduction.Models.ProductDetail>

@{
    ViewData["Title"] = "Product Details";
    var product = ViewBag.Product as ShopEProduction.Models.Product;
    var isNotLogged = string.IsNullOrEmpty(Context.Session.GetString("userId"));
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

    <style>
        .container {
            padding: 80px;
        }

        .card {
            background: #ffffff;
            border-radius: 10px;
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }

            .card:hover {
                transform: scale(1.02);
                box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);
            }

        .product-image {
            width: 100%;
            max-width: 350px;
            height: auto;
            border-radius: 10px;
            transition: transform 0.3s ease-in-out;
        }

            .product-image:hover {
                transform: scale(1.05);
            }

        .badge {
            font-size: 1rem;
            padding: 8px 12px;
            border-radius: 12px;
        }

        .btn-outline-secondary {
            transition: all 0.3s ease-in-out;
        }

            .btn-outline-secondary:hover {
                background-color: #6c757d;
                color: white;
            }

        .table {
            background-color: white;
            border-radius: 10px;
            overflow: hidden;
        }

        .table-hover tbody tr:hover {
            background-color: #f8f9fa;
            transition: background-color 0.2s ease-in-out;
        }

        .empty {
            background: red !important;
            color: white !important;
        }

        .btn-buy-now {
            font-size: 14px;
            padding: 5px 10px;
        }

        #cartAlert {
            display: none;
        }
        /* Initially hidden */
    </style>
</head>
<body>
    @Html.Partial("_Header")
    <div class="container mt-5">
        @if (isNotLogged)
        {
            <div class="alert alert-danger text-center">You need to login to view this page.</div>
        }
        else
        {
            <div id="cartAlert" class="alert alert-info text-center position-fixed top-0 start-50 translate-middle-x w-50" style="z-index: 1000;"></div>

            <div class="card shadow-lg border-0 rounded-lg p-4">
                <div class="row align-items-center">
                    <div class="col-md-6 text-center">
                        <img src="@Url.Content("~/Assets/Images/ProductImage/" + product.Id + ".jpg")" alt="@product.Name" class="img-fluid rounded product-image shadow-sm">
                    </div>
                    
                    <div class="col-md-6">
                        <h2 class="text-primary fw-bold">@product.Name</h2>
                        @if (product.Type == 0)
                        {
                            <p class="text-muted">Sold: <strong>@product.SoldNumber</strong></p>
                        }
                        else
                        {
                            <p class="text-muted">Product for Rented Demand!!!</p>
                        }
                        <p>
                            <strong>Status: </strong>
                            <span class="badge @(product.Status == true ? "bg-success" : "bg-danger")">
                                @(product.Status == true ? "Available" : "Out of Stock")
                            </span>
                        </p>
                        <a href="javascript:history.back()" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left"></i> Back
                        </a>
                    </div>
                </div>
            </div>

            <div class="mt-5">
                <h3 class="text-center text-primary">📌 Product Details</h3>
                <table class="table table-hover shadow-sm rounded">
                    <thead class="table-dark">
                        @if (product.Status == true && product.Type == 0)
                        {
                            <tr>
                                <th>Detail Description</th>
                                <th>Add to Cart</th>
                                <th>Click to Buy</th>
                            </tr>
                        }
                        else if (product.Status == true && product.Type == 1)
                        {
                            <tr>
                                <th>Detail Description</th>
                                <th>Rent Options</th>
                            </tr>
                        }
                        else if (product.Status == false)
                        {
                            <tr>
                                <th class="empty">This product currently is not available. Sorry for the inconvenience!!!</th>
                            </tr>
                        }
                    </thead>
                    <tbody>
                        @foreach (var detail in Model)
                        {
                            if (detail.Status == true && detail.ProductType == 0)
                            {
                                <tr>
                                    <td>@detail.DetailDesc</td>
                                    <td>
                                        <button class="btn btn-primary btn-sm add-to-cart-btn" data-id="@detail.Id">
                                            <i class="fas fa-info-circle"></i> Add To Cart
                                        </button>
                                    </td>
                                    <td>
                                        <button class="btn btn-success btn-buy-now" data-id="@detail.Id" data-bs-toggle="modal" data-bs-target="#buyModal">
                                            <i class="fas fa-shopping-cart"></i> Buy Now
                                        </button>
                                    </td>
                                </tr>
                            }
                            else if (detail.Status == true && detail.ProductType == 1)
                            {
                                <tr>
                                    <td>@detail.DetailDesc</td>
                                    <td>
                                        <button class="btn btn-warning btn-rent-now" data-id="@detail.Id">
                                            <i class="fas fa-cart-plus"></i> Rent Now
                                        </button>

                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>

    <!-- Buy Now Modal -->
    <div class="modal fade" id="buyModal" tabindex="-1" aria-labelledby="buyModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="buyModalLabel">Buy Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Product:</strong> <span id="modalProductDesc"></span></p>
                    <p><strong>Price:</strong> $<span id="modalPrice"></span></p>
                    <p><strong>Current Wallet Balance:</strong> $<span id="modalBalance"></span></p>
                    <input type="hidden" id="modalDetailId" />
                    <div id="modalError" class="alert alert-danger d-none"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="confirmBuyBtn">Confirm Purchase</button>
                </div>
            </div>
        </div>
    </div>

    @Html.Partial("_Footer")

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            // Add to Cart
            $('.add-to-cart-btn').click(function () {
                let detailId = $(this).data('id');
                $.ajax({
                    url: '/Cart/AddToCart',
                    method: 'POST',
                    data: { detailId: detailId },
                    success: function (response) {
                        let alertBox = $('#cartAlert');
                        if (response.success) {
                            alertBox.removeClass('alert-danger').addClass('alert-info');
                            alertBox.text(response.message);
                            alertBox.show();
                            setTimeout(() => alertBox.fadeOut(), 3000);
                        } else {
                            alertBox.removeClass('alert-info').addClass('alert-danger');
                            alertBox.text(response.message);
                            alertBox.show();
                            setTimeout(() => alertBox.fadeOut(), 3000);
                            if (response.redirect) {
                                setTimeout(() => window.location.href = response.redirect, 2000);
                            }
                        }
                    },
                    error: function (error) {
                        console.error("Error:", error);
                        let alertBox = $('#cartAlert');
                        alertBox.removeClass('alert-info').addClass('alert-danger');
                        alertBox.text('Error adding item to cart.');
                        alertBox.show();
                        setTimeout(() => alertBox.fadeOut(), 3000);
                    }
                });
            });

            // Buy Now Modal Trigger
            $('.btn-buy-now').click(function () {
                let detailId = $(this).data('id');
                $.ajax({
                    url: '/Product/GetProductDetail',
                    method: 'GET',
                    data: { id: detailId },
                    success: function (response) {
                        if (response.success) {
                            $('#modalProductDesc').text(response.detailDesc);
                            $('#modalPrice').text(response.price.toFixed(2));
                            $('#modalBalance').text(response.walletBalance.toFixed(2));
                            $('#modalDetailId').val(detailId);
                            $('#modalError').addClass('d-none').text('');
                        } else {
                            $('#modalError').removeClass('d-none').text('Failed to load product details.');
                        }
                    },
                    error: function () {
                        $('#modalError').removeClass('d-none').text('Error contacting server.');
                    }
                });
            });

            // Confirm Purchase
            $('#confirmBuyBtn').click(function () {
                let detailId = $('#modalDetailId').val();
                let price = parseFloat($('#modalPrice').text());
                let balance = parseFloat($('#modalBalance').text());

                if (price > balance) {
                    $('#modalError').removeClass('d-none').text('Insufficient wallet balance.');
                    return;
                }

                $.ajax({
                    url: '/Purchase/BuyNow',
                    method: 'POST',
                    data: { detailId: detailId },
                    success: function (response) {
                        if (response.success) {
                            $('#buyModal').modal('hide');
                            let alertBox = $('#cartAlert');
                            alertBox.removeClass('alert-danger').addClass('alert-info');
                            alertBox.text(response.message);
                            alertBox.show();
                            setTimeout(() => alertBox.fadeOut(), 3000);
                        } else {
                            $('#modalError').removeClass('d-none').text(response.message);
                        }
                    },
                    error: function () {
                        $('#modalError').removeClass('d-none').text('Error processing purchase.');
                    }
                });
            });

            $('.btn-rent-now').click(function () {
                let detailId = $(this).data('id');
                window.location.href = `/Rent/ShowRentForm?detailId=${detailId}`;
            });

        });
    </script>
</body>
</html>